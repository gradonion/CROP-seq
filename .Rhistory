neg.cells <- nonzero.cells[-tg.indx]
summary_per_gene[[glocus]] <- categoric(subset.sctransform_data,tg.cells,neg.cells)
}
row.names(exp.per.gRNA)[-c(51,72:76)]
View(edgeR.res1Mb)
unique(full_genes.1Mb.filtered$locus)
tmp <- sapply(full_genes.1Mb.filtered$locus, function(x) paste0(x,'_1_gene'))
tmp[1:5]
tmp <- unique(full_genes.1Mb.filtered$cisGene)
length(colnames(exp.per.gRNA)[exp.per.gRNA['NGEF_3_gene',]>0])
row.names(exp.per.gRNA)[51]
full_genes.200kb.expanded <- expand_gRNA(full_genes.200kb.filtered)
expand_gRNA <- function(df){
df1 <- df
df2 <- df
df3 <- df
df1$gRNA <- sapply(df$locus, function(x) paste0(x,'_1_gene'))
df2$gRNA <- sapply(df$locus, function(x) paste0(x,'_2_gene'))
df3$gRNA <- sapply(df$locus, function(x) paste0(x,'_3_gene'))
final.df <- rbind(df1,df2.df3)
return(final.df)
}
full_genes.200kb.expanded <- expand_gRNA(full_genes.200kb.filtered)
expand_gRNA <- function(df){
df1 <- df
df2 <- df
df3 <- df
df1$gRNA <- sapply(df$locus, function(x) paste0(x,'_1_gene'))
df2$gRNA <- sapply(df$locus, function(x) paste0(x,'_2_gene'))
df3$gRNA <- sapply(df$locus, function(x) paste0(x,'_3_gene'))
final.df <- rbind(df1,df2,df3)
return(final.df)
}
full_genes.200kb.expanded <- expand_gRNA(full_genes.200kb.filtered)
View(full_genes.200kb.expanded)
full_genes.200kb.expanded <- full_genes.200kb.expanded[sort(full_genes.200kb.expanded$gRNA),]
full_genes.200kb.expanded <- expand_gRNA(full_genes.200kb.filtered)
full_genes.200kb.expanded <- full_genes.200kb.expanded[order(full_genes.200kb.expanded$gRNA),]
expand_gRNA <- function(df){
df1 <- df
df2 <- df
df3 <- df
df1$gRNA <- sapply(df$locus, function(x) paste0(x,'_1_gene'))
df2$gRNA <- sapply(df$locus, function(x) paste0(x,'_2_gene'))
df3$gRNA <- sapply(df$locus, function(x) paste0(x,'_3_gene'))
final.df <- rbind(df1,df2,df3)
final.df <- final.df[order(final.df), ]
return(final.df)
}
full_genes.200kb.expanded <- expand_gRNA(full_genes.200kb.filtered)
expand_gRNA <- function(df){
df1 <- df
df2 <- df
df3 <- df
df1$gRNA <- sapply(df$locus, function(x) paste0(x,'_1_gene'))
df2$gRNA <- sapply(df$locus, function(x) paste0(x,'_2_gene'))
df3$gRNA <- sapply(df$locus, function(x) paste0(x,'_3_gene'))
final.df <- rbind(df1,df2,df3)
final.df <- final.df[order(final.df$gRNA), ]
return(final.df)
}
full_genes.200kb.expanded <- expand_gRNA(full_genes.200kb.filtered)
full_genes.500kb.expanded <- expand_gRNA(full_genes.500kb.filtered)
full_genes.1Mb.expanded <- expand_gRNA(full_genes.1Mb.filtered)
View(full_genes.1Mb.expanded)
expand_gRNA <- function(df){
df1 <- df
df2 <- df
df3 <- df
df1$gRNA <- sapply(df$locus, function(x) paste0(x,'_1_gene'))
df2$gRNA <- sapply(df$locus, function(x) paste0(x,'_2_gene'))
df3$gRNA <- sapply(df$locus, function(x) paste0(x,'_3_gene'))
final.df <- rbind(df1,df2,df3)
final.df <- final.df[order(final.df$gRNA), ]
row.names(final.df) <- NULL
return(final.df)
}
full_genes.200kb.expanded <- expand_gRNA(full_genes.200kb.filtered)
full_genes.200kb.expanded <- expand_gRNA(full_genes.200kb.filtered)
full_genes.500kb.expanded <- expand_gRNA(full_genes.500kb.filtered)
full_genes.1Mb.expanded <- expand_gRNA(full_genes.1Mb.filtered)
save(full_genes.200kb.expanded, full_genes.500kb.expanded, full_genes.1Mb.expanded,
file = '~/Downloads/ASoC/singlecell/data/full.cisgenes_SNP.expanded.Rdata')
summary_per_gene <- list()
for (glocus in row.names(exp.per.gRNA)[-c(72:76)]){
print(paste('gRNA target:',glocus))
tg.cells <- colnames(exp.per.gRNA)[exp.per.gRNA[glocus,]>0]
print(paste('# of targeted cells:',length(tg.cells)))
tg.indx <- match(tg.cells,nonzero.cells)
neg.cells <- nonzero.cells[-tg.indx]
summary_per_gene[[glocus]] <- categoric(subset.sctransform_data,tg.cells,neg.cells)
}
saveRDS(summary_per_gene, file = paste0(wkdir,'data/full.summary_per_gene.gRNA_grp.rds'))
View(summary_per_gene)
beta.mtx <- sapply(summary_per_gene, function(x){x$beta})
View(beta.mtx)
se.mtx <- sapply(summary_per_gene, function(x){x$se})
pval.mtx <- sapply(summary_per_gene, function(x){x$pval})
ash_on_scttest <- function(uniq.cisgenes,option){
for (i in 1:nrow(uniq.cisgenes)) {
if (option=='enhancer'){
tmp.column <- uniq.cisgenes$locus[i]
} else if (option=='gRNA') {
tmp.column <- uniq.cisgenes$gRNA[i]
} else {
print('Please provide a valid type: enhancer or gRNA.')
return(1)
}
tmp.gene <- uniq.cisgenes$cisGene[i]
if (is.na(match(tmp.gene,subset.genes))){
next
} else {
uniq.cisgenes$ttest.beta[i] <- beta.mtx[tmp.gene,tmp.column]
uniq.cisgenes$ttest.se[i] <- se.mtx[tmp.gene,tmp.column]
uniq.cisgenes$ttest.pval[i] <- pval.mtx[tmp.gene,tmp.column]
}
}
uniq.cisgenes <- na.omit(uniq.cisgenes)
cat(nrow(uniq.cisgenes),'data points:')
uniq.cisgenes$zscore <- uniq.cisgenes$ttest.beta/uniq.cisgenes$ttest.se
plot1 <- ggplot(uniq.cisgenes,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from ttest',y='frequency') +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),col=2)
ash.ttest <- ash(uniq.cisgenes$ttest.beta,uniq.cisgenes$ttest.se,mixcompdist = '-uniform')
uniq.cisgenes$ash.beta <- ash.ttest$result$PosteriorMean
uniq.cisgenes$lfsr <- get_lfsr(ash.ttest)
uniq.cisgenes$lfdr <- get_lfdr(ash.ttest)
log10_lfsr <- log10(get_lfsr(ash.ttest))
plot2 <- qplot(uniq.cisgenes$ttest.beta, uniq.cisgenes$ash.beta,
color=log10_lfsr, main = 'ash shrinkage on ttest result',
xlab = 'log fold change', ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
grid.arrange(plot1,plot2,ncol=2)
uniq.cisgenes <- uniq.cisgenes[order(uniq.cisgenes$lfsr),]
uniq.cisgenes <- format(uniq.cisgenes,digits=3)
print(kable(uniq.cisgenes,row.names = F) %>% kable_styling() %>%
scroll_box(width = "100%", height = "300px"))
ash.stats <- data.frame(pi=ash.ttest$fitted_g$pi,
interval_a=ash.ttest$fitted_g$a, interval_b=ash.ttest$fitted_g$b)
cat('ash estimated mixture proportions and corresponding intervals:')
print(kable(ash.stats[ash.stats$pi!=0,], row.names = F, digits = 3) %>%
kable_styling(position = 'center',full_width = T) )
}
ash_on_scttest(full_genes.200kb.expanded,'gRNA')
View(beta.mtx)
tmp <- match(full_genes.200kb.expanded$gRNA,colnames(beta.mtx))
tmp
full_genes.200kb.expanded$gRNA[158]
row.names(exp.per.gRNA)[-c(72:76)]
View(full_genes.500kb.filtered)
View(full_genes.200kb.filtered)
full_genes.200kb.filtered$locus[full_genes.200kb.filtered$locus=='PCDHA1'] <- 'PCDHA123'
full_genes.200kb.expanded <- expand_gRNA(full_genes.200kb.filtered)
View(full_genes.200kb.expanded)
full_genes.500kb.filtered$locus[full_genes.500kb.filtered$locus=='PCDHA1'] <- 'PCDHA123'
full_genes.500kb.expanded <- expand_gRNA(full_genes.500kb.filtered)
full_genes.1Mb.filtered$locus[full_genes.1Mb.filtered$locus=='PCDHA1'] <- 'PCDHA123'
full_genes.1Mb.expanded <- expand_gRNA(full_genes.1Mb.filtered)
View(full_genes.1Mb.expanded)
full_genes.200kb <- read.delim('~/Downloads/ASoC/singlecell/data/genes_in_200kb.txt',
header = F,col.names = c('cisGene','SNP'))
View(full_genes.200kb)
library(dplyr)
View(full_genes.200kb.filtered)
View(full_genes.200kb.expanded)
full_genes.200kb %>% filter(SNP=='rs4151680')
full_genes.200kb.filtered %>% filter(SNP=='rs4151680')
save(full_genes.200kb.expanded, full_genes.500kb.expanded, full_genes.1Mb.expanded,
file = '~/Downloads/ASoC/singlecell/data/full.cisgenes_SNP.expanded.Rdata')
match(full_genes.200kb.expanded$gRNA,colnames(beta.mtx))
ash_on_scttest(full_genes.200kb.expanded,'gRNA')
length(unique(full_genes.1Mb.filtered$locus))
length(unique(full_genes.1Mb.expanded$gRNA))
View(full_genes.1Mb.filtered)
rmarkdown::render_site('cisgene_ttest_permutation.Rmd')
rmarkdown::render_site('cisgenes_newfilter.Rmd')
rmarkdown::render_site('ashr_on_sctransform_data.Rmd')
rmarkdown::render_site('transgene_ttest_permutation.Rmd')
rmarkdown::render_site('ashr_on_sctransform_data.Rmd')
rmarkdown::render_site('transgene_ttest_permutation.Rmd')
knitr::opts_chunk$set(fig.width=9, fig.height=3, fig.path='Figs/',
echo=TRUE, warning=FALSE, message=FALSE, comment = NA, fig.align = 'center')
wkdir <- '~/Downloads/ASoC/singlecell/'
edgeR.res1Mb <- read.delim(paste0(wkdir,'data/edgeR_res.1Mb.txt'),header = T,sep = '\t')
summary_per_gene <- readRDS(paste0(wkdir,'data/cis.categ.perm.summary01.rds'))
beta.mtx <- sapply(summary_per_gene, function(x){x$beta})
se.mtx <- sapply(summary_per_gene, function(x){x$se})
pval.mtx <- sapply(summary_per_gene, function(x){x$pval})
View(beta.mtx)
cisgenes.1Mb <- edgeR.res1Mb[,c(1:4)]
View(cisgenes.1Mb)
ash_on_scttest <- function(uniq.cisgenes,option){
for (i in 1:nrow(uniq.cisgenes)) {
if (option=='enhancer'){
tmp.column <- uniq.cisgenes$locus[i]
} else if (option=='gRNA') {
tmp.column <- uniq.cisgenes$gRNA[i]
} else {
print('Please provide a valid type: enhancer or gRNA.')
return(1)
}
tmp.gene <- uniq.cisgenes$cisGene[i]
uniq.cisgenes$ttest.beta[i] <- beta.mtx[tmp.gene,tmp.column]
uniq.cisgenes$ttest.se[i] <- se.mtx[tmp.gene,tmp.column]
uniq.cisgenes$ttest.pval[i] <- pval.mtx[tmp.gene,tmp.column]
}
uniq.cisgenes <- na.omit(uniq.cisgenes)
cat(nrow(uniq.cisgenes),'data points:')
uniq.cisgenes$zscore <- uniq.cisgenes$ttest.beta/uniq.cisgenes$ttest.se
plot1 <- ggplot(uniq.cisgenes,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from ttest',y='frequency') +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),col=2)
ash.ttest <- ash(uniq.cisgenes$ttest.beta,uniq.cisgenes$ttest.se,mixcompdist = '-uniform')
uniq.cisgenes$ash.beta <- ash.ttest$result$PosteriorMean
uniq.cisgenes$lfsr <- get_lfsr(ash.ttest)
log10_lfsr <- log10(get_lfsr(ash.ttest))
plot2 <- qplot(uniq.cisgenes$ttest.beta, uniq.cisgenes$ash.beta,
color=log10_lfsr, main = 'ash shrinkage on ttest result',
xlab = 'log fold change', ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
grid.arrange(plot1,plot2,ncol=2)
uniq.cisgenes <- uniq.cisgenes[order(uniq.cisgenes$lfsr),]
uniq.cisgenes <- format(uniq.cisgenes,digits=3)
print(kable(uniq.cisgenes,row.names = F) %>% kable_styling() %>%
scroll_box(width = "100%", height = "200px"))
ash.stats <- data.frame(pi=ash.ttest$fitted_g$pi,
interval_a=ash.ttest$fitted_g$a, interval_b=ash.ttest$fitted_g$b)
cat('ash estimated mixture proportions and corresponding intervals:')
print(kable(ash.stats[ash.stats$pi!=0,], row.names = F, digits = 3) %>%
kable_styling(position = 'center',full_width = T) )
}
ash_on_scttest(cisgenes.1Mb,'gRNA')
print('Please provide a valid type for \'option\': enhancer or gRNA.')
summary_per_gene <- readRDS(paste0(wkdir,'data/full.summary_per_gene.gRNA_grp.rds'))
beta.mtx <- sapply(summary_per_gene, function(x){x$beta})
se.mtx <- sapply(summary_per_gene, function(x){x$se})
pval.mtx <- sapply(summary_per_gene, function(x){x$pval})
options(stringsAsFactors = F)
wkdir <- '~/Downloads/ASoC/singlecell/'
load(paste0(wkdir,'data/cropseq_expression.Rd'))
vst_out <- readRDS(paste0(wkdir,'data/sctransformed_object.rds'))
sctransform_data <- vst_out$y
row.names(exp.per.enhancer)[-13]
row.names(exp.per.enhancer)[13]
nrow(exp.per.enhancer)
## DE test by enhancer ####
load('~/Downloads/ASoC/singlecell/data/full.cisgenes_SNP.Rdata')
subset.genes <- unique(full_genes.1Mb.filtered$cisGene)
subset.sctransform_data <- sctransform_data[subset.genes,nonzero.cells]
nonzero.cells <- colnames(exp.per.gRNA)[colSums(exp.per.gRNA>0)>0]
subset.sctransform_data <- sctransform_data[subset.genes,nonzero.cells]
dim(subset.sctransform_data) # 240x3708
View(full_genes.1Mb.filtered)
unique(full_genes.1Mb.filtered$locus)
row.names(exp.per.enhancer)[-13]
unique(full_genes.1Mb.filtered$locus)[order(unique(full_genes.1Mb.filtered$locus))]
full_genes.1Mb <- read.delim('~/Downloads/ASoC/singlecell/data/genes_in_1Mb.txt',
header = F,col.names = c('cisGene','SNP'))
View(full_genes.1Mb)
rm(full_genes.1Mb)
summary_per_gene <- list()
source('~/Downloads/ASoC/singlecell/github/code/categoric_regression.R')
source('~/Downloads/ASoC/singlecell/github/code/cis_ash_scttest.R')
for (glocus in row.names(exp.per.enhancer)[-13]){
print(paste('enhancer target:',glocus))
tg.cells <- colnames(exp.per.enhancer)[exp.per.enhancer[glocus,]>0]
print(paste('# of targeted cells:',length(tg.cells)))
tg.indx <- match(tg.cells,nonzero.cells)
neg.cells <- nonzero.cells[-tg.indx]
summary_per_gene[[glocus]] <- categoric(subset.sctransform_data,tg.cells,neg.cells)
}
View(summary_per_gene)
beta.mtx <- sapply(summary_per_gene, function(x){x$beta})
View(beta.mtx)
saveRDS(summary_per_gene, file = paste0(wkdir,'data/full.summary_per_gene.enhancer_grp.rds'))
se.mtx <- sapply(summary_per_gene, function(x){x$se})
pval.mtx <- sapply(summary_per_gene, function(x){x$pval})
View(full_genes.200kb.filtered)
filter_genes <- function(df, SNP_locus.tb, thres){
df$percentage <- gene.percent[df$cisGene]
df.filtered <- na.omit(df)
df.filtered <- df.filtered[df.filtered$percentage > thres,]
df.filtered$locus <- SNP_locus.tb$locus[match(df.filtered$SNP, SNP_locus.tb$SNP)]
df.filtered$locus[df.filtered$locus=='PCDHA1'] <- 'PCDHA123'
df.filtered <- df.filtered[order(df.filtered$locus),]
return(df.filtered)
}
full_genes.200kb <- read.delim('~/Downloads/ASoC/singlecell/data/genes_in_200kb.txt',
header = F,col.names = c('cisGene','SNP'))
thres <- 0.1
full_genes.200kb.filtered <- filter_genes(full_genes.200kb,SNP_locus.tb,thres)
gene.percent <- rowMeans(gene.exp>0)
full_genes.200kb.filtered <- filter_genes(full_genes.200kb,SNP_locus.tb,thres)
SNP_locus.tb <- read.delim('~/Downloads/ASoC/data/scRNA_seq_SNP_list.txt',
header = F,col.names = c('SNP','locus'))
full_genes.200kb.filtered <- filter_genes(full_genes.200kb,SNP_locus.tb,thres)
expand_gRNA <- function(df){
df1 <- df
df2 <- df
df3 <- df
df1$gRNA <- sapply(df$locus, function(x) paste0(x,'_1_gene'))
df2$gRNA <- sapply(df$locus, function(x) paste0(x,'_2_gene'))
df3$gRNA <- sapply(df$locus, function(x) paste0(x,'_3_gene'))
final.df <- rbind(df1,df2,df3)
final.df <- final.df[order(final.df$gRNA), ]
row.names(final.df) <- NULL
return(final.df)
}
full_genes.200kb.expanded <- expand_gRNA(full_genes.200kb.filtered)
View(full_genes.200kb.expanded)
full_genes.1Mb <- read.delim('~/Downloads/ASoC/singlecell/data/genes_in_1Mb.txt',
header = F,col.names = c('cisGene','SNP'))
full_genes.500kb <- read.delim('~/Downloads/ASoC/singlecell/data/genes_in_500kb.txt',
header = F,col.names = c('cisGene','SNP'))
full_genes.200kb <- read.delim('~/Downloads/ASoC/singlecell/data/genes_in_200kb.txt',
header = F,col.names = c('cisGene','SNP'))
thres <- 0.1
full_genes.1Mb.filtered <- filter_genes(full_genes.1Mb,SNP_locus.tb,thres)
full_genes.500kb.filtered <- filter_genes(full_genes.500kb,SNP_locus.tb,thres)
full_genes.200kb.filtered <- filter_genes(full_genes.200kb,SNP_locus.tb,thres)
save(full_genes.200kb.filtered, full_genes.500kb.filtered, full_genes.1Mb.filtered,
file = '~/Downloads/ASoC/singlecell/data/full.cisgenes_SNP.Rdata')
View(beta.mtx)
ash_on_scttest(full_genes.200kb.filtered,'enhancer')
thres <- 0.2
full_genes.1Mb.filtered <- filter_genes(full_genes.1Mb,SNP_locus.tb,thres)
full_genes.500kb.filtered <- filter_genes(full_genes.500kb,SNP_locus.tb,thres)
full_genes.200kb.filtered <- filter_genes(full_genes.200kb,SNP_locus.tb,thres)
View(full_genes.200kb.filtered)
save(full_genes.200kb.filtered, full_genes.500kb.filtered, full_genes.1Mb.filtered,
file = '~/Downloads/ASoC/singlecell/data/full.cisgenes_SNP.2.R
full_genes.200kb.expanded <- expand_gRNA(full_genes.200kb.filtered)
save(full_genes.200kb.filtered, full_genes.500kb.filtered, full_genes.1Mb.filtered,
file = '~/Downloads/ASoC/singlecell/data/full.cisgenes_SNP.2.Rdata')
full_genes.200kb.expanded <- expand_gRNA(full_genes.200kb.filtered)
74*3
full_genes.500kb.expanded <- expand_gRNA(full_genes.500kb.filtered)
full_genes.1Mb.expanded <- expand_gRNA(full_genes.1Mb.filtered)
save(full_genes.200kb.expanded, full_genes.500kb.expanded, full_genes.1Mb.expanded,
file = '~/Downloads/ASoC/singlecell/data/full.cisgenes_SNP.expanded.2.Rdata')
ash_on_scttest(full_genes.200kb.expanded,'gRNA')
length(unique(full_genes.200kb.expanded$cisGene))
source('~/Downloads/ASoC/singlecell/github/code/cis_ash_scttest.R')
# beta.mtx <- sapply(summary_per_gene, function(x){x$beta})
# se.mtx <- sapply(summary_per_gene, function(x){x$se})
# pval.mtx <- sapply(summary_per_gene, function(x){x$pval})
summary.gRNA <- readRDS(paste0(wkdir,'data/full.summary_per_gene.gRNA_grp.rds'))
ash_on_scttest(summary.gRNA,full_genes.200kb.expanded,'gRNA')
View(ash_on_scttest)
# beta.mtx <- sapply(summary_per_gene, function(x){x$beta})
# se.mtx <- sapply(summary_per_gene, function(x){x$se})
# pval.mtx <- sapply(summary_per_gene, function(x){x$pval})
summary.enhancer <- readRDS(paste0(wkdir,'data/full.summary_per_gene.enhancer_grp.rds'))
ash_on_scttest(summary.gRNA,full_genes.200kb.filtered,'enhancer')
ash_on_scttest(summary.enhancer,full_genes.200kb.filtered,'enhancer')
gene.percent['TRANK1']
knitr::opts_chunk$set(fig.width=9, fig.height=3, fig.path='Figs/',
echo=TRUE, warning=FALSE, message=FALSE, comment = NA, fig.align = 'center')
library(ggplot2)
library(knitr)
library(kableExtra)
library(gridExtra)
library(ashr)
options(stringsAsFactors = F)
wkdir <- '~/Downloads/ASoC/singlecell/'
source(paste0(wkdir,'github/code/cis_ash_scttest.R'))
summary.gRNA <- readRDS(paste0(wkdir,'data/full.summary_per_gene.gRNA_grp.rds'))
load(paste0(wkdir, 'data/full.cisgenes_SNP.expanded.Rdata'))
ash_on_scttest(summary.gRNA,full_genes.200kb.expanded,'gRNA')
ash_on_scttest(summary.gRNA,full_genes.500kb.expanded,'gRNA')
summary_per_gene <- readRDS(paste0(wkdir,'data/summary_per_gene.enhancer_grp.1vOthers.rds'))
knitr::opts_chunk$set(fig.width=9, fig.height=3, fig.path='Figs/',
echo=TRUE, warning=FALSE, message=FALSE, comment = NA, fig.align = 'center')
library(ggplot2)
library(knitr)
library(kableExtra)
library(gridExtra)
library(ashr)
options(stringsAsFactors = F)
wkdir <- '~/Downloads/ASoC/singlecell/'
summary_per_gene <- readRDS(paste0(wkdir,'data/summary_per_gene.enhancer_grp.1vOthers.rds'))
beta.mtx <- sapply(summary_per_gene, function(x){x$beta})
View(beta.mtx)
dim(beta.mtx)
summary_per_gene <- readRDS(paste0(wkdir,'data/summary_per_gene.enhancer_grp.1vOthers.rds'))
beta.mtx <- sapply(summary_per_gene, function(x){x$beta})
se.mtx <- sapply(summary_per_gene, function(x){x$se})
pval.mtx <- sapply(summary_per_gene, function(x){x$pval})
rownames(beta.mtx) <- subset.genes
rmarkdown::render_site('cisgenes.ashr_analysis.Rmd')
rmarkdown::render_site('cisgene_ttest_permutation.Rmd')
wkdir <- '~/Downloads/ASoC/singlecell/'
vst_out <- readRDS(paste0(wkdir,'data/sctransformed_object.rds'))
sctransform_data <- vst_out$y
load(paste0(wkdir, 'data/full.cisgenes_SNP.expanded.Rdata'))
subset.genes <- unique(full_genes.1Mb.expanded$cisGene)
load(paste0(wkdir,'data/cropseq_expression.Rd'))
nonzero.cells <- colnames(exp.per.gRNA)[colSums(exp.per.gRNA>0)>0]
dim(sctransform_data)
subset.sctransform_data <- sctransform_data[subset.genes,nonzero.cells]
# categoric regression function
source('~/Downloads/ASoC/singlecell/github/code/categoric_regression.R')
row.names(exp.per.gRNA)
row.names(exp.per.gRNA)[-c(72:76)]
permute_categ <- function(seed){
set.seed(seed)
perm.summary <- list()
for (glocus in row.names(exp.per.gRNA)[-c(72:76)]){
# print(paste('gRNA target:',glocus))
tg.cells <- colnames(exp.per.gRNA)[exp.per.gRNA[glocus,]>0]
tg.indx <- sample(length(nonzero.cells),length(tg.cells))
tg.cells <- nonzero.cells[tg.indx]
neg.cells <- nonzero.cells[-tg.indx]
perm.summary[[glocus]] <- categoric(subset.sctransform_data,tg.cells,neg.cells)
}
return(perm.summary)
}
summary_per_gene <- permute_categ(1952)
beta.mtx <- sapply(summary_per_gene, function(x){x$beta})
View(beta.mtx)
se.mtx <- sapply(summary_per_gene, function(x){x$se})
pval.mtx <- sapply(summary_per_gene, function(x){x$pval})
source('~/Downloads/ASoC/singlecell/github/code/cis_ash_scttest.R')
load(paste0(wkdir, 'data/full.cisgenes_SNP.expanded.Rdata'))
ash_on_scttest(summary_per_gene,full_genes.1Mb.expanded,'gRNA')
rmarkdown::render_site('cisgene_ttest_permutation.Rmd')
rmarkdown::render_site('index.Rmd')
sum(colnames(exp.per.enhancer)[exp.per.enhancer["neg",]>0)
sum(exp.per.enhancer["neg",]>0)
nlocus <- colSums(exp.per.enhancer>0)
sum(exp.per.enhancer["neg",]>0 & nlocus==1)
sum(exp.per.enhancer["neg",]>0 & exp.per.enhancer["BAG5",]==0)
row.names(exp.per.gRNA)[1]
glocus <- row.names(exp.per.gRNA)[1]
tg.cells <- colnames(exp.per.gRNA)[exp.per.gRNA[glocus,]>0]
all.neg.cells <- colnames(exp.per.enhancer)[exp.per.enhancer["neg",]>0]
exclude <- match(all.neg.cells,tg.cells)
sum(!is.na(exclude))
all.neg.cells[!is.na(exclude)]
match("ACTGATGCATCACAAC-1",tg.cells)
match("GCTCCTACAGACAGGT-1",tg.cells)
match("TTTGCGCGTAACGACG-1",tg.cells)
length(all.neg.cells[is.na(exclude)])
dim(subset.sctransform_data)
rm(beta.mtx,se.mtx,pval.mtx)
rm(vst_out)
rm(nonzero.cells)
summary_per_gene <- list()
all.neg.cells <- colnames(exp.per.enhancer)[exp.per.enhancer["neg",]>0]
for (glocus in row.names(exp.per.gRNA)[-c(72:76)]){
print(paste('gRNA target:',glocus))
tg.cells <- colnames(exp.per.gRNA)[exp.per.gRNA[glocus,]>0]
print(paste('# of targeted cells:',length(tg.cells)))
tg.indx <- match(tg.cells,nonzero.cells)
# neg.cells <- nonzero.cells[-tg.indx]
exclude <- match(all.neg.cells,tg.cells)
neg.cells <- all.neg.cells[is.na(exclude)]
print(paste('# of neg-ctrl cells:',length(neg.cells)))
summary_per_gene[[glocus]] <- categoric(subset.sctransform_data,tg.cells,neg.cells)
}
summary_per_gene <- list()
all.neg.cells <- colnames(exp.per.enhancer)[exp.per.enhancer["neg",]>0]
for (glocus in row.names(exp.per.gRNA)[-c(72:76)]){
print(paste('gRNA target:',glocus))
tg.cells <- colnames(exp.per.gRNA)[exp.per.gRNA[glocus,]>0]
print(paste('# of targeted cells:',length(tg.cells)))
# tg.indx <- match(tg.cells,nonzero.cells)
# neg.cells <- nonzero.cells[-tg.indx]
exclude <- match(all.neg.cells,tg.cells)
neg.cells <- all.neg.cells[is.na(exclude)]
print(paste('# of neg-ctrl cells:',length(neg.cells)))
summary_per_gene[[glocus]] <- categoric(subset.sctransform_data,tg.cells,neg.cells)
}
saveRDS(summary_per_gene, file = paste0(wkdir,'data/full.summary_per_gene.gRNA_grp.negonly.rds'))
ash_on_scttest(summary_per_gene,full_genes.200kb.expanded,'gRNA')
View(ash_on_scttest)
ash_on_scttest(summary_per_gene,full_genes.500kb.expanded,'gRNA')
neg.summary.gRNA <- summary_per_gene
glocus
row.names(exp.per.gRNA)[-c(72:76)]
row.names(colnames(exp.per.gRNA))
row.names(exp.per.gRNA)
row.names(exp.per.enhancer)
glocus = row.names(exp.per.gRNA)[1]
strsplit(glocus,split = '_')
strsplit(glocus,split = '_')[[1]][1]
tg.cells <- colnames(exp.per.gRNA)[exp.per.gRNA[glocus,]>0]
print(paste('# of targeted cells:',length(tg.cells)))
enh <- strsplit(glocus,split = '_')[[1]][1]
enh.cells <- colnames(exp.per.enhancer)[exp.per.enhancer[enh,]>0]
enh.indx <- match(enh.cells,nonzero.cells)
nonzero.cells <- colnames(exp.per.gRNA)[colSums(exp.per.gRNA>0)>0]
enh.indx <- match(enh.cells,nonzero.cells)
sum(is.na(enh.indx))
neg.cells <- nonzero.cells[-enh.indx]
print(paste('# of control cells:',length(neg.cells)))
summary_per_gene <- list()
for (glocus in row.names(exp.per.gRNA)[-c(72:76)]){
print(paste('gRNA target:',glocus))
tg.cells <- colnames(exp.per.gRNA)[exp.per.gRNA[glocus,]>0]
print(paste('# of targeted cells:',length(tg.cells)))
enh <- strsplit(glocus,split = '_')[[1]][1]
enh.cells <- colnames(exp.per.enhancer)[exp.per.enhancer[enh,]>0]
enh.indx <- match(enh.cells,nonzero.cells)
neg.cells <- nonzero.cells[-enh.indx]
print(paste('# of control cells:',length(neg.cells)))
summary_per_gene[[glocus]] <- categoric(subset.sctransform_data,tg.cells,neg.cells)
}
ash_on_scttest(summary_per_gene,full_genes.200kb.expanded,'gRNA')
rmarkdown::render_site()
rmarkdown::render_site('transgene_ttest_permutation.Rmd')
rmarkdown::render_site('transgene_ttest_permutation.Rmd')
