# tmp.gene <- uniq.cisgenes$cisGene[i]
tmp.gene <- uniq.cisgenes$gene[i]
if (is.na(match(tmp.gene,subset.genes))){
next
} else {
uniq.cisgenes$ttest.beta[i] <- beta.mtx[tmp.gene,uniq.cisgenes$locus[i]]
uniq.cisgenes$ttest.se[i] <- se.mtx[tmp.gene,uniq.cisgenes$locus[i]]
uniq.cisgenes$ttest.pval[i] <- pval.mtx[tmp.gene,uniq.cisgenes$locus[i]]
}
}
View(uniq.cisgenes)
uniq.cisgenes <- na.omit(uniq.cisgenes)
qplot(uniq.cisgenes$ttest.beta) + geom_vline(xintercept = 0,col='red')
ash.ttest.1Mb <- ash(uniq.cisgenes$ttest.beta,uniq.cisgenes$ttest.se,mixcompdist = '-uniform')
log10_lfsr <- log10(get_lfsr(ash.ttest.1Mb))
qplot(uniq.cisgenes$ttest.beta, ash.ttest.1Mb$result$PosteriorMean,
color=log10_lfsr, main = 'ttest 1Mb',
xlab = 'log fold change', ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
min(get_lfsr(ash.ttest.1Mb))
head(uniq.cisgenes[get_lfsr(ash.ttest.1Mb),])
head(uniq.cisgenes[order(get_lfsr(ash.ttest.1Mb)),])
uniq.cisgenes$ash.lfsr <- get_lfsr(ash.ttest.1Mb)
head(uniq.cisgenes[order(get_lfsr(ash.ttest.1Mb)),])
edgeR.res <- read.delim('~/Downloads/ASoC/singlecell/data/edgeR_res.200kb.txt',header = T,sep = '\t')
View(edgeR.res)
## ash on edgeR result ####
edgeR.res$est.se <- abs(edgeR.res\$logFC/qnorm(edgeR.res$empiricalP/2))
## ash on edgeR result ####
edgeR.res$est.se <- abs(edgeR.res$logFC/qnorm(edgeR.res$empiricalP/2))
qplot(edgeR.res$logFC)+geom_vline(xintercept = 0,col='red')
qplot(edgeR.res$est.se)+geom_vline(xintercept = 1,col='red')
ash.edgeR.200 <- ash(edgeR.res$logFC, edgeR.res$est.se, mixcompdist = '+uniform')
min(get_lfsr(ash.edgeR.200)) # 1
edgeR.res$lfsr <- get_lfsr(ash.edgeR.200)
head(edgeR.res[order(edgeR.res$lfsr),])
qplot(edgeR.res$logFC,edgeR.res$lfsr, color=log10(edgeR.res$lfsr),
main = 'edgeR 200kb', xlab = 'log fold change',
ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
ash_on_edgeR <- function(edgeR.res){
edgeR.res$est.se <- abs(edgeR.res$logFC/qnorm(edgeR.res$empiricalP/2))
qplot(edgeR.res$logFC)+geom_vline(xintercept = 0,col='red')
qplot(edgeR.res$est.se)+geom_vline(xintercept = 1,col='red')
ash.edgeR <- ash(edgeR.res$logFC, edgeR.res$est.se, mixcompdist = '+uniform')
edgeR.res$lfsr <- get_lfsr(ash.edgeR)
print(knitr::kable(head(edgeR.res[order(edgeR.res$lfsr),])))
qplot(edgeR.res$logFC,edgeR.res$lfsr, color=log10(edgeR.res$lfsr),
main = 'ash shrinkage on edgeR result', xlab = 'log fold change',
ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
}
edgeR.res200 <- read.delim('~/Downloads/ASoC/singlecell/data/edgeR_res.200kb.txt',header = T,sep = '\t')
ash_on_edgeR(edgeR.res200)
library(knitr)
ash_on_edgeR <- function(edgeR.res){
edgeR.res$est.se <- abs(edgeR.res$logFC/qnorm(edgeR.res$empiricalP/2))
# qplot(edgeR.res$logFC)+geom_vline(xintercept = 0,col='red')
# qplot(edgeR.res$est.se)+geom_vline(xintercept = 1,col='red')
ash.edgeR <- ash(edgeR.res$logFC, edgeR.res$est.se, mixcompdist = '+uniform')
edgeR.res$lfsr <- get_lfsr(ash.edgeR)
print(kable(edgeR.res[order(edgeR.res$lfsr),])%>%
kable_styling() %>%
scroll_box(width = "100%", height = "400px"))
qplot(edgeR.res$logFC,edgeR.res$lfsr, color=log10(edgeR.res$lfsr),
main = 'ash shrinkage on edgeR result', xlab = 'log fold change',
ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
}
ash_on_edgeR(edgeR.res200)
ash_on_edgeR <- function(edgeR.res){
edgeR.res$est.se <- abs(edgeR.res$logFC/qnorm(edgeR.res$empiricalP/2))
# qplot(edgeR.res$logFC)+geom_vline(xintercept = 0,col='red')
# qplot(edgeR.res$est.se)+geom_vline(xintercept = 1,col='red')
ash.edgeR <- ash(edgeR.res$logFC, edgeR.res$est.se, mixcompdist = '+uniform')
edgeR.res$lfsr <- get_lfsr(ash.edgeR)
print(kable(edgeR.res[order(edgeR.res$lfsr),],row.names = F)%>%
kable_styling() %>%
scroll_box(width = "100%", height = "400px"))
qplot(edgeR.res$logFC,edgeR.res$lfsr, color=log10(edgeR.res$lfsr),
main = 'ash shrinkage on edgeR result', xlab = 'log fold change',
ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
}
edgeR.res500 <- read.delim('~/Downloads/ASoC/singlecell/data/edgeR_res.500kb.txt',header = T,sep = '\t')
ash_on_edgeR(edgeR.res500)
edgeR.res1Mb <- read.delim('~/Downloads/ASoC/singlecell/data/edgeR_res.1Mb.txt',header = T,sep = '\t')
ash_on_edgeR(edgeR.res1Mb)
View(edgeR.res200)
saveRDS(edgeR.res,'edgeR.res_200kb.rds')
qplot(edgeR.res$logFC/edgeR.res$est.se)
edgeR.res$zscore <- edgeR.res$logFC/edgeR.res$est.se
ggplot(edgeR.res,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from edgeR 200kb',y='frequency')
ggplot(edgeR.res,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from edgeR 200kb',y='frequency') +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),col=2)
View(uniq.cisgenes)
uniq.cisgenes$zscore <- uniq.cisgenes$ttest.beta/uniq.cisgenes$ttest.se
ggplot(uniq.cisgenes,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from ttest 1Mb',y='frequency') +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),col=2)
## ash on sctransform ttest ####
uniq.cisgenes <- edgeR.res[!duplicated.default(edgeR.res$cisGene),c(2,4)]
for (i in 1:nrow(uniq.cisgenes)) {
tmp.gene <- uniq.cisgenes$cisGene[i]
if (is.na(match(tmp.gene,subset.genes))){
next
} else {
uniq.cisgenes$ttest.beta[i] <- beta.mtx[tmp.gene,uniq.cisgenes$locus[i]]
uniq.cisgenes$ttest.se[i] <- se.mtx[tmp.gene,uniq.cisgenes$locus[i]]
uniq.cisgenes$ttest.pval[i] <- pval.mtx[tmp.gene,uniq.cisgenes$locus[i]]
}
}
uniq.cisgenes <- na.omit(uniq.cisgenes)
uniq.cisgenes$zscore <- uniq.cisgenes$ttest.beta/uniq.cisgenes$ttest.se
ggplot(uniq.cisgenes,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from ttest 1Mb',y='frequency') +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),col=2)
ash.ttest <- ash(uniq.cisgenes$ttest.beta,uniq.cisgenes$ttest.se,mixcompdist = '-uniform')
uniq.cisgenes$ash.beta <- ash.ttest$result$PosteriorMean
uniq.cisgenes$lfsr <- get_lfsr(ash.ttest)
log10_lfsr <- log10(get_lfsr(ash.ttest))
qplot(uniq.cisgenes$ttest.beta, uniq.cisgenes$ash.beta,
color=log10_lfsr, main = 'ttest 1Mb',
xlab = 'log fold change', ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
print(kable(uniq.cisgenes[order(uniq.cisgenes$lfsr),],row.names = F)%>%
kable_styling() %>%
scroll_box(width = "100%", height = "400px"))
summary_per_gene <- readRDS(paste0(wkdir,'data/summary_per_gene.enhancer_grp.1vOthers.rds'))
library(ggplot2)
library(knitr)
library(gridExtra)
options(stringsAsFactors = F)
wkdir <- '~/Downloads/ASoC/singlecell/'
load(paste0(wkdir,'data/cropseq_expression.Rd'))
nlocus <- colSums(exp.per.enhancer>0)
gene.percent <- rowMeans(gene.exp>0)
vst_out <- readRDS(paste0(wkdir,'data/sctransformed_object.rds'))
sctransform_data <- vst_out$y
categoric <- function(mtx,tg.cells,neg.cells){
pval <- rep(NA,nrow(mtx))
beta <- rep(NA,nrow(mtx))
se <- rep(NA,nrow(mtx))
subset <- mtx[,c(tg.cells,neg.cells)]
for (i in 1:nrow(subset)){
df <- data.frame(row.names = c(tg.cells,neg.cells),
residual = as.numeric(subset[i,]),
condition=c(rep(1,length(tg.cells)),
rep(0,length(neg.cells))))
cat.lm <- summary(lm(residual~factor(condition), data = df))
beta[i] <- cat.lm$coefficients[2,1]
se[i] <- cat.lm$coefficients[2,2]
pval[i] <- cat.lm$coefficients[2,4]
}
return(list(beta=beta,se=se,pval=pval))
}
# Filter the genes to be present in > 10% cells:
subset.genes <- names(gene.percent)[gene.percent>0.1]
summary_per_gene <- readRDS(paste0(wkdir,'data/summary_per_gene.enhancer_grp.1vOthers.rds'))
beta.mtx <- sapply(summary_per_gene, function(x){x$beta})
se.mtx <- sapply(summary_per_gene, function(x){x$se})
pval.mtx <- sapply(summary_per_gene, function(x){x$pval})
rownames(beta.mtx) <- subset.genes
rownames(se.mtx) <- subset.genes
rownames(pval.mtx) <- subset.genes
edgeR.res1Mb <- read.delim('~/Downloads/ASoC/singlecell/data/edgeR_res.1Mb.txt',header = T,sep = '\t')
edgeR.res200kb <- read.delim('~/Downloads/ASoC/singlecell/data/edgeR_res.200kb.txt',header = T,sep = '\t')
edgeR.res500kb <- read.delim('~/Downloads/ASoC/singlecell/data/edgeR_res.500kb.txt',header = T,sep = '\t')
ash_on_edgeR <- function(edgeR.res){
edgeR.res$est.se <- abs(edgeR.res$logFC/qnorm(edgeR.res$empiricalP/2))
edgeR.res$zscore <- edgeR.res$logFC/edgeR.res$est.se
plot1 <- ggplot(edgeR.res,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from edgeR',y='frequency') +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),col=2)
ash.edgeR <- ash(edgeR.res$logFC, edgeR.res$est.se, mixcompdist = '+uniform')
edgeR.res$ash.beta <- ash.edgeR$result$PosteriorMean
edgeR.res$lfsr <- get_lfsr(ash.edgeR)
plot2 <- qplot(edgeR.res$logFC,edgeR.res$ash.beta, color=log10(edgeR.res$lfsr),
main = 'ash shrinkage on edgeR result', xlab = 'log fold change',
ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
grid.arrange(plot1,plot2,ncol=2)
print(kable(edgeR.res[order(edgeR.res$lfsr),],row.names = F)%>%
kable_styling() %>%
scroll_box(width = "100%", height = "400px"))
}
ash_on_edgeR(edgeR.res200kb)
ash_on_scttest <- function(uniq.cisgenes){
for (i in 1:nrow(uniq.cisgenes)) {
tmp.gene <- uniq.cisgenes$cisGene[i]
if (is.na(match(tmp.gene,subset.genes))){
next
} else {
uniq.cisgenes$ttest.beta[i] <- beta.mtx[tmp.gene,uniq.cisgenes$locus[i]]
uniq.cisgenes$ttest.se[i] <- se.mtx[tmp.gene,uniq.cisgenes$locus[i]]
uniq.cisgenes$ttest.pval[i] <- pval.mtx[tmp.gene,uniq.cisgenes$locus[i]]
}
}
uniq.cisgenes <- na.omit(uniq.cisgenes)
uniq.cisgenes$zscore <- uniq.cisgenes$ttest.beta/uniq.cisgenes$ttest.se
plot1 <- ggplot(uniq.cisgenes,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from ttest',y='frequency') +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),col=2)
ash.ttest <- ash(uniq.cisgenes$ttest.beta,uniq.cisgenes$ttest.se,mixcompdist = '-uniform')
uniq.cisgenes$ash.beta <- ash.ttest$result$PosteriorMean
uniq.cisgenes$lfsr <- get_lfsr(ash.ttest)
log10_lfsr <- log10(get_lfsr(ash.ttest))
plot2 <- qplot(uniq.cisgenes$ttest.beta, uniq.cisgenes$ash.beta,
color=log10_lfsr, main = 'ash shrinkage on ttest result',
xlab = 'log fold change', ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
grid.arrange(plot1,plot2,ncol=2)
print(kable(uniq.cisgenes[order(uniq.cisgenes$lfsr),],row.names = F)%>%
kable_styling() %>%
scroll_box(width = "100%", height = "400px"))
return(uniq.cisgenes)
}
ash_on_scttest <- function(uniq.cisgenes){
for (i in 1:nrow(uniq.cisgenes)) {
tmp.gene <- uniq.cisgenes$cisGene[i]
if (is.na(match(tmp.gene,subset.genes))){
next
} else {
uniq.cisgenes$ttest.beta[i] <- beta.mtx[tmp.gene,uniq.cisgenes$locus[i]]
uniq.cisgenes$ttest.se[i] <- se.mtx[tmp.gene,uniq.cisgenes$locus[i]]
uniq.cisgenes$ttest.pval[i] <- pval.mtx[tmp.gene,uniq.cisgenes$locus[i]]
}
}
uniq.cisgenes <- na.omit(uniq.cisgenes)
uniq.cisgenes$zscore <- uniq.cisgenes$ttest.beta/uniq.cisgenes$ttest.se
plot1 <- ggplot(uniq.cisgenes,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from ttest',y='frequency') +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),col=2)
ash.ttest <- ash(uniq.cisgenes$ttest.beta,uniq.cisgenes$ttest.se,mixcompdist = '-uniform')
uniq.cisgenes$ash.beta <- ash.ttest$result$PosteriorMean
uniq.cisgenes$lfsr <- get_lfsr(ash.ttest)
log10_lfsr <- log10(get_lfsr(ash.ttest))
plot2 <- qplot(uniq.cisgenes$ttest.beta, uniq.cisgenes$ash.beta,
color=log10_lfsr, main = 'ash shrinkage on ttest result',
xlab = 'log fold change', ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
grid.arrange(plot1,plot2,ncol=2)
print(kable(uniq.cisgenes[order(uniq.cisgenes$lfsr),],row.names = F)%>%
kable_styling() %>%
scroll_box(width = "100%", height = "400px"))
# return(uniq.cisgenes)
}
uniq.cisgenes.200kb <- edgeR.res[!duplicated.default(edgeR.res200kb$cisGene),c(2,4)]
uniq.cisgenes.200kb <- edgeR.res200kb[!duplicated.default(edgeR.res200kb$cisGene),c(2,4)]
# uniq.cisgenes <- gene_by_snp
ash_on_scttest(uniq.cisgenes.200kb)
print('\n')
cat('\n')
# Filter out cells with non gRNAs infiltrated
# qplot(colSums(exp.per.gRNA>0),xlab = '# of gRNA per cell')
nonzero.cells <- colnames(exp.per.gRNA)[colSums(exp.per.gRNA>0)>0]
4414-3708
row.names(exp.per.gRNA)
row.names(exp.per.gRNA)[c(51,72:76)]
edgeR.res1Mb <- read.delim('~/Downloads/ASoC/singlecell/data/edgeR_res.1Mb.txt',header = T,sep = '\t')
uniq.cisgenes.1Mb <- edgeR.res1Mb[!duplicated.default(edgeR.res1Mb$cisGene),c(2,4)]
subset2.genes <- uniq.cisgenes.1Mb$cisGene
subset2.sctransform_data <- sctransform_data[subset2.genes,nonzero.cells]
dim(subset.sctransform_data)
dim(subset2.sctransform_data)
# btw each gRNA condition: w/o
summary2_per_gene <- list()
for (glocus in row.names(exp.per.gRNA)[-c(51,72:76)]){
print(paste('gRNA target:',glocus))
tg.cells <- colnames(exp.per.gRNA)[exp.per.gRNA[glocus,]>0,] # & ...] don't have other 2 gRNAs
print(paste('# of targeted cells:',length(tg.cells)))
tmp.indx <- match(tg.cells,nonzero.cells)
neg.cells <- nonzero.cells[-tmp.indx]
summary2_per_gene[[glocus]] <- categoric(subset2.sctransform_data,tg.cells,neg.cells)
}
saveRDS(summary2_per_gene,file = paste0(wkdir,'data/summary_per_gene.gRNA_grp.1vOthers.rds'))
# btw each gRNA condition: w/o
summary2_per_gene <- list()
for (glocus in row.names(exp.per.gRNA)[-c(51,72:76)]){
print(paste('gRNA target:',glocus))
tg.cells <- colnames(exp.per.gRNA)[exp.per.gRNA[glocus,]>0] # & ...] don't have other 2 gRNAs
print(paste('# of targeted cells:',length(tg.cells)))
tmp.indx <- match(tg.cells,nonzero.cells)
neg.cells <- nonzero.cells[-tmp.indx]
summary2_per_gene[[glocus]] <- categoric(subset2.sctransform_data,tg.cells,neg.cells)
}
saveRDS(summary2_per_gene,file = paste0(wkdir,'data/summary_per_gene.gRNA_grp.1vOthers.rds'))
# summary_per_gene <- readRDS(paste0(wkdir,'data/summary_per_gene.enhancer_grp.1vOthers.rds'))
summary_per_gene <- readRDS(paste0(wkdir,'data/summary_per_gene.gRNA_grp.1vOthers.rds'))
options(stringsAsFactors = F)
wkdir <- '~/Downloads/ASoC/singlecell/'
load(paste0(wkdir,'data/cropseq_expression.Rd'))
nlocus <- colSums(exp.per.enhancer>0)
gene.percent <- rowMeans(gene.exp>0)
wkdir <- '~/Downloads/ASoC/singlecell/'
# summary_per_gene <- readRDS(paste0(wkdir,'data/summary_per_gene.enhancer_grp.1vOthers.rds'))
summary_per_gene <- readRDS(paste0(wkdir,'data/summary_per_gene.gRNA_grp.1vOthers.rds'))
beta.mtx <- sapply(summary_per_gene, function(x){x$beta})
se.mtx <- sapply(summary_per_gene, function(x){x$se})
pval.mtx <- sapply(summary_per_gene, function(x){x$pval})
edgeR.res1Mb <- read.delim('~/Downloads/ASoC/singlecell/data/edgeR_res.1Mb.txt',header = T,sep = '\t')
uniq.cisgenes.1Mb <- edgeR.res1Mb[!duplicated.default(edgeR.res1Mb$cisGene),c(2,4)]
subset2.genes <- uniq.cisgenes.1Mb$cisGene
subset.genes <- uniq.cisgenes.1Mb$cisGene
rownames(beta.mtx) <- subset.genes
rownames(se.mtx) <- subset.genes
rownames(pval.mtx) <- subset.genes
rm(subset2.genes)
uniq.cisgenes.1Mb <- edgeR.res1Mb[!duplicated.default(edgeR.res1Mb$cisGene),c(2,4)]
View(uniq.cisgenes.1Mb)
View(edgeR.res1Mb)
ash_on_edgeR <- function(edgeR.res){
cat(nrow(edgeR.res),'data points.')
edgeR.res$est.se <- abs(edgeR.res$logFC/qnorm(edgeR.res$empiricalP/2))
edgeR.res$zscore <- edgeR.res$logFC/edgeR.res$est.se
plot1 <- ggplot(edgeR.res,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from edgeR',y='frequency') +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),col=2)
ash.edgeR <- ash(edgeR.res$logFC, edgeR.res$est.se, mixcompdist = '+uniform')
edgeR.res$ash.beta <- ash.edgeR$result$PosteriorMean
edgeR.res$lfsr <- get_lfsr(ash.edgeR)
plot2 <- qplot(edgeR.res$logFC,edgeR.res$ash.beta, color=log10(edgeR.res$lfsr),
main = 'ash shrinkage on edgeR result', xlab = 'log fold change',
ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
grid.arrange(plot1,plot2,ncol=2)
print(kable(edgeR.res[order(edgeR.res$lfsr),],row.names = F)%>%
kable_styling() %>%
scroll_box(width = "100%", height = "300px"))
return(edgeR.res)
}
edgeR.res1Mb <- ash_on_edgeR(edgeR.res1Mb)
ash_on_scttest <- function(uniq.cisgenes){
for (i in 1:nrow(uniq.cisgenes)) {
tmp.gene <- uniq.cisgenes$cisGene[i]
if (is.na(match(tmp.gene,subset.genes))){
next
} else {
uniq.cisgenes$ttest.beta[i] <- beta.mtx[tmp.gene,uniq.cisgenes$locus[i]]
uniq.cisgenes$ttest.se[i] <- se.mtx[tmp.gene,uniq.cisgenes$locus[i]]
uniq.cisgenes$ttest.pval[i] <- pval.mtx[tmp.gene,uniq.cisgenes$locus[i]]
}
}
uniq.cisgenes <- na.omit(uniq.cisgenes)
cat(nrow(uniq.cisgenes),'data points.')
uniq.cisgenes$zscore <- uniq.cisgenes$ttest.beta/uniq.cisgenes$ttest.se
plot1 <- ggplot(uniq.cisgenes,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from ttest',y='frequency') +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),col=2)
ash.ttest <- ash(uniq.cisgenes$ttest.beta,uniq.cisgenes$ttest.se,mixcompdist = '-uniform')
uniq.cisgenes$ash.beta <- ash.ttest$result$PosteriorMean
uniq.cisgenes$lfsr <- get_lfsr(ash.ttest)
log10_lfsr <- log10(get_lfsr(ash.ttest))
plot2 <- qplot(uniq.cisgenes$ttest.beta, uniq.cisgenes$ash.beta,
color=log10_lfsr, main = 'ash shrinkage on ttest result',
xlab = 'log fold change', ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
grid.arrange(plot1,plot2,ncol=2)
print(kable(uniq.cisgenes[order(uniq.cisgenes$lfsr),],row.names = F)%>%
kable_styling() %>%
scroll_box(width = "100%", height = "300px"))
return(uniq.cisgenes)
}
input.1Mb <- edgeR.res1Mb[,c(1:4)]
View(input.1Mb)
View(uniq.cisgenes.1Mb)
colnames(beta.mtx)
# ash_on_scttest(uniq.cisgenes.200kb,'enhancer')
cisgenes.1Mb <- edgeR.res1Mb[,c(1:4)]
rm(input.1Mb)
ash_on_edgeR <- function(edgeR.res){
cat(nrow(edgeR.res),'data points.')
edgeR.res$est.se <- abs(edgeR.res$logFC/qnorm(edgeR.res$empiricalP/2))
edgeR.res$zscore <- edgeR.res$logFC/edgeR.res$est.se
plot1 <- ggplot(edgeR.res,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from edgeR',y='frequency') +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),col=2)
ash.edgeR <- ash(edgeR.res$logFC, edgeR.res$est.se, mixcompdist = '+uniform')
edgeR.res$ash.beta <- ash.edgeR$result$PosteriorMean
edgeR.res$lfsr <- get_lfsr(ash.edgeR)
plot2 <- qplot(edgeR.res$logFC,edgeR.res$ash.beta, color=log10(edgeR.res$lfsr),
main = 'ash shrinkage on edgeR result', xlab = 'log fold change',
ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
grid.arrange(plot1,plot2,ncol=2)
print(kable(edgeR.res[order(edgeR.res$lfsr),],row.names = F)%>%
kable_styling() %>%
scroll_box(width = "100%", height = "300px"))
return(edgeR.res)
}
ash_on_scttest <- function(uniq.cisgenes,option){
for (i in 1:nrow(uniq.cisgenes)) {
if (option=='enhancer'){
tmp.column <- uniq.cisgenes$locus[i]
} else if (option=='gRNA') {
tmp.column <- uniq.cisgenes$gRNA[i]
} else {
print('Please provide a valid type: enhancer or gRNA.')
return(1)
}
tmp.gene <- uniq.cisgenes$cisGene[i]
if (is.na(match(tmp.gene,subset.genes))){
next
} else {
uniq.cisgenes$ttest.beta[i] <- beta.mtx[tmp.gene,tmp.column]
uniq.cisgenes$ttest.se[i] <- se.mtx[tmp.gene,tmp.column]
uniq.cisgenes$ttest.pval[i] <- pval.mtx[tmp.gene,tmp.column]
}
}
uniq.cisgenes <- na.omit(uniq.cisgenes)
cat(nrow(uniq.cisgenes),'data points.')
uniq.cisgenes$zscore <- uniq.cisgenes$ttest.beta/uniq.cisgenes$ttest.se
plot1 <- ggplot(uniq.cisgenes,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from ttest',y='frequency') +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),col=2)
ash.ttest <- ash(uniq.cisgenes$ttest.beta,uniq.cisgenes$ttest.se,mixcompdist = '-uniform')
uniq.cisgenes$ash.beta <- ash.ttest$result$PosteriorMean
uniq.cisgenes$lfsr <- get_lfsr(ash.ttest)
log10_lfsr <- log10(get_lfsr(ash.ttest))
plot2 <- qplot(uniq.cisgenes$ttest.beta, uniq.cisgenes$ash.beta,
color=log10_lfsr, main = 'ash shrinkage on ttest result',
xlab = 'log fold change', ylab = 'beta after shrinkage') +
geom_abline(intercept = 0,slope = 1,linetype = "dotted")
grid.arrange(plot1,plot2,ncol=2)
print(kable(uniq.cisgenes[order(uniq.cisgenes$lfsr),],row.names = F)%>%
kable_styling() %>%
scroll_box(width = "100%", height = "300px"))
return(uniq.cisgenes)
}
test_gRNA.res1Mb <- ash_on_scttest(cisgenes.1Mb,'gRNA')
View(cisgenes.1Mb)
## load SNP-gene pairs
edgeR.res200kb <- read.delim('~/Downloads/ASoC/singlecell/data/edgeR_res.200kb.txt',header = T,sep = '\t')
cisgenes.200kb <- edgeR.res200kb[,c(1:4)]
uniq.cisgenes <- cisgenes.200kb
option <- 'gRNA'
for (i in 1:nrow(uniq.cisgenes)) {
if (option=='enhancer'){
tmp.column <- uniq.cisgenes$locus[i]
} else if (option=='gRNA') {
tmp.column <- uniq.cisgenes$gRNA[i]
} else {
print('Please provide a valid type: enhancer or gRNA.')
return(1)
}
tmp.gene <- uniq.cisgenes$cisGene[i]
if (is.na(match(tmp.gene,subset.genes))){
next
} else {
uniq.cisgenes$ttest.beta[i] <- beta.mtx[tmp.gene,tmp.column]
uniq.cisgenes$ttest.se[i] <- se.mtx[tmp.gene,tmp.column]
uniq.cisgenes$ttest.pval[i] <- pval.mtx[tmp.gene,tmp.column]
}
}
uniq.cisgenes <- na.omit(uniq.cisgenes)
cat(nrow(uniq.cisgenes),'data points.')
uniq.cisgenes$zscore <- uniq.cisgenes$ttest.beta/uniq.cisgenes$ttest.se
ggplot(uniq.cisgenes,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from ttest',y='frequency') +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),col=2)
ash.ttest.negunif <- ash(uniq.cisgenes$ttest.beta,uniq.cisgenes$ttest.se,mixcompdist = '-uniform')
ash.ttest.normal <- ash(uniq.cisgenes$ttest.beta,uniq.cisgenes$ttest.se,mixcompdist = 'normal')
View(ash.ttest.negunif)
View(ash.ttest.normal)
ash.ttest.negunif$fitted_g
ash.ttest.normal$fitted_g
get_lfdr(ash.ttest.negunif)[order(get_lfdr(ash.ttest.negunif))]
get_lfdr(ash.ttest.negunif)[order(get_lfdr(ash.ttest.negunif))][1:10]
get_lfsr(ash.ttest.negunif)[order(get_lfsr(ash.ttest.negunif))][1:10]
edgeR.res <- edgeR.res200kb
View(edgeR.res200kb)
cat(nrow(edgeR.res),'data points.')
edgeR.res$est.se <- abs(edgeR.res$logFC/qnorm(edgeR.res$empiricalP/2))
edgeR.res$zscore <- edgeR.res$logFC/edgeR.res$est.se
ggplot(edgeR.res,aes(zscore)) + geom_histogram(aes(y=..density..),bins = 20) +
labs(x = 'z-score from edgeR',y='frequency') +
stat_function(fun = dnorm, args = list(mean = 0, sd = 1),col=2)
ash.edgeR.posunif <- ash(edgeR.res$logFC, edgeR.res$est.se, mixcompdist = '+uniform')
View(ash.edgeR.posunif)
ash.edgeR.normal <- ash(edgeR.res$logFC, edgeR.res$est.se, mixcompdist = 'normal')
ash.edgeR.posunif$fitted_g
ash.edgeR.normal$fitted_g
View(edgeR.res200kb)
View(uniq.cisgenes)
head(uniq.cisgenes[order(uniq.cisgenes$ttest.pval),],20)
rmarkdown::render_site('cisgenes.ashr_on_sctransform_data.Rmd')
print(ash.ttest.negunif$fitted_g)
ash.ttest <- ash.ttest.negunif
data.frame(pi=ash.ttest$fitted_g$pi, interval_a=ash.ttest$fitted_g$a, interval_b=ash.ttest$fitted_g$b)
ash.stats <- data.frame(pi=ash.ttest$fitted_g$pi, interval_a=ash.ttest$fitted_g$a, interval_b=ash.ttest$fitted_g$b)
ash.stats[ash.stats$pi!=0,]
print(kable(ash.stats[ash.stats$pi!=0,], row.names = F, digits = 3))
rmarkdown::render_site('cisgenes.ashr_on_sctransform_data.Rmd')
View(uniq.cisgenes)
DT::datatable(uniq.cisgenes)
install.packages('DT')
DT::datatable(uniq.cisgenes)
kable(uniq.cisgenes,row.names = F, digits = 4)%>%
kable_styling() %>%
scroll_box(width = "100%", height = "300px")
?format
head(format(uniq.cisgenes,digits=3))
head(format(uniq.cisgenes[5:8],digits=3))
head(signif(uniq.cisgenes[5:8],digits=3))
uniq.cisgenes <- uniq.cisgenes[order(uniq.cisgenes$ttest.pval),]
head(signif(uniq.cisgenes[5:8],digits=3))
head(signif(uniq.cisgenes,digits=3))
rmarkdown::render_site('cisgenes.ashr_on_sctransform_data.Rmd')
rmarkdown::render_site('cisgenes.ashr_on_sctransform_data.Rmd')
rmarkdown::render_site()
